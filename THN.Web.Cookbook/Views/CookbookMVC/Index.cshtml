@model IEnumerable<THN.Web.Cookbook.Models.RecipeListViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "CoockbookMVC", FormMethod.Get))
{
    <p>
        Find: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search"/>
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Category","Index", new { sortOrder = ViewBag.CategorySortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @foreach(var value in EnumHelper<CategoryEnum>.GetValues(CategoryEnum.Misc))
            {
                if (value == item.Category)
                {
                    var description = EnumHelper<CategoryEnum>.GetDisplayValue(value);
                    @Html.DisplayFor(e => description);
                    break;
                }
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.RecipeId }) |
            @Html.ActionLink("Details", "Details", new { id=item.RecipeId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.RecipeId })
        </td>
    </tr>
}

</table>
